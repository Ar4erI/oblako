	Активация окружения
В терминале нужно перейти в папку 'oblako', внутри которой файл 'start.py', окружение активируется командой 'source venv/Scripts/activate'
"""Возможно вместо 'source venv/Scripts/activate' нужно ввести 'venv/Scripts/activate' (но )"""
	Запуск сервера
После активации окружения, находясь в папке 'oblako' внутри которой файл 'start.py', вводишь команду 'python3 start.py' которая активирует сервер на http://127.0.0.1:5000
Сервер активен можно отправлять запросы, но некоторые неправильные запросы могут отключить сервер, просто перезапускаешь сервер той же командой.
"""Возможно вместо 'python3 start.py' нужно ввести 'python start.py' """

	Url адресы сервера

http://127.0.0.1:5000/create_all_for_db methods=['POST']

{
  "pswd": "super secret key"
}

создаёт тестовую базу данных, это только для разработчиков, перед отправкой нужно удалить старую бд находится 'oblako/app/db.sqlite',
создаёт админа 2 роли 1 категорию и 6 товаров.

http://127.0.0.1:5000/<category> methods=['GET', 'POST']

где <category> это цифра которая является id категории
даёт массив всех товаров для определённой категории
в тесте только 1
методом 'GET', получишь весь список товаров для категории
для метода 'POST' нужно отправить такие данные
{
    "manufacturer": "JBR",
    "min_price": "170",
    "max_price": "460",
    "sort_by": "price",
    "sort": "min_max"
}
sort_by принимает только "price" и "manufacturer"
sort принимает только "min_max", "max_min", при пустом значении равнозначен "min_max"
все поля необязательные можно отправить так 
{
    "manufacturer": "",
    "min_price": "",
    "max_price": "",
    "sort_by": "",
    "sort": ""
}
будет равнозначен 'GET' методу

http://127.0.0.1:5000/product methods=['GET']

даёт массив всех товаров всех категорий

http://127.0.0.1:5000/product/<id> methods=['GET']

где id это цифра означающая id товара
даёт один товар по id 

http://127.0.0.1:5000/product/<id>/buy methods=['POST']

где id это цифра означающая id покупаемого товара
покупает один товар по id, для покупки нужно отправить такие данные
{
	"qty": 1
}
qty - количество приобретаемых товаров(int),

возвращает {'msg': 'Добавлено в корзину!'}

http://127.0.0.1:5000/product/cart methods=['GET', 'PUT', 'DELETE']

'GET' выдаёт массив товаров в корзине
'PUT' меняет количество для товара
необходимы такие данные
{
	"id": "1"
	"qty": 2
}
id - id товара для которого необходимо изменить количество(str)
qty - новое количество(int)
'DELETE' удаляет один товар по id
необходимы такие данные
{
	"id": "1"
}
id - id удаляемого товара(str)

http://127.0.0.1:5000/product/cart/order methods=['POST']

совершение покупки всех товаров в корзине
необходимы такие данные
{
  "address": "НП №1222",
  "delivery_type": "22",
  "email": "ff@gmail.com2313",
  "name": "Фёдор12",
  "pay_type": "При получении",
  "phone": "+380674004050",
  "second_name": "Фёдоров123"
}
